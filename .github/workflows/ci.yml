name: CI (Python 3.12 + uv)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 같은 브랜치의 이전 실행을 취소해 대기열 방지
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    env:
      # 테스트 일관성/성능용 권장 env
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      UV_NO_SYNC_DOWNLOADS: 1
      UV_SYSTEM_PYTHON: 1

      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      GEMINI_MODEL_ARGU: ${{ secrets.GEMINI_MODEL_ARGU }}
      GEMINI_MODEL_FILTER: ${{ secrets.GEMINI_MODEL_FILTER }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
      SPAM_MODEL: ${{ secrets.SPAM_MODEL }}
      SPAM_MODEL_URL: ${{ secrets.SPAM_MODEL_URL }}
      SPAM_MODEL_API_KEY: ${{ secrets.SPAM_MODEL_API_KEY }} 

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # refactor: pip 설치하는 대신 공식 setup-uv 액션 사용 (캐시/바이너리 설치 깔끔)
      - name: Install uv
        uses: astral-sh/setup-uv@v3

      # uv 캐시 (site-packages + wheel 캐시)
      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock', 'pyproject.toml', 'requirements.txt') }}

      - name: Sync dependencies
        run: |
          if [ -f "uv.lock" ]; then
            uv sync --dev --frozen
          elif [ -f "pyproject.toml" ]; then
            uv sync --dev
          elif [ -f "requirements.txt" ]; then
            uv pip install -r requirements.txt
            uv pip install pytest
          else
            echo "No dependency manifest found." && exit 1
          fi

      - name: Run tests
        run: |
          chmod +x ./scripts/run_pytest.sh 2>/dev/null || true
          if [ -f "scripts/run_pytest.sh" ]; then
            ./scripts/run_pytest.sh
          else
            # 빠른 피드백을 위해 실패 1건에서 중단 + 짧은 출력
            uv run pytest -q --maxfail=1 --disable-warnings --junitxml=pytest-report.xml
          fi
